// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module im2col_mat_im2col_mat_Pipeline_VITIS_LOOP_56_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        zext_ln45,
        rhs,
        sext_ln1558_1,
        sext_ln18_1,
        sext_ln885,
        zext_ln43_5,
        trunc_ln,
        zext_ln885,
        mul_ln18_2,
        mat_in_pad_V_address0,
        mat_in_pad_V_ce0,
        mat_in_pad_V_q0,
        conv_i_i208,
        mul_ln18_1,
        icmp_ln1072_1,
        mul_ln18,
        exitcond_flatten_mid1138,
        sext_ln56,
        mat_out
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [11:0] zext_ln45;
input  [2:0] rhs;
input  [2:0] sext_ln1558_1;
input  [5:0] sext_ln18_1;
input  [2:0] sext_ln885;
input  [5:0] zext_ln43_5;
input  [10:0] trunc_ln;
input  [2:0] zext_ln885;
input  [58:0] mul_ln18_2;
output  [10:0] mat_in_pad_V_address0;
output   mat_in_pad_V_ce0;
input  [7:0] mat_in_pad_V_q0;
input  [2:0] conv_i_i208;
input  [40:0] mul_ln18_1;
input  [0:0] icmp_ln1072_1;
input  [34:0] mul_ln18;
input  [0:0] exitcond_flatten_mid1138;
input  [5:0] sext_ln56;
input  [63:0] mat_out;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_BREADY;
reg mat_in_pad_V_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
reg   [0:0] first_itr_mid2_reg_1328;
reg   [0:0] first_itr_mid2_reg_1328_pp0_iter6_reg;
reg    ap_block_state8_io;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
reg   [0:0] icmp_ln1072_3_reg_1394;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter12_reg;
reg    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln43_fu_456_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_B;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_W;
reg    gmem_blk_n_AW;
reg   [0:0] first_itr_reg_304;
reg    ap_block_pp0_stage0_11001;
wire  signed [10:0] sext_ln56_cast_fu_316_p1;
reg  signed [10:0] sext_ln56_cast_reg_1185;
wire  signed [31:0] conv_i_i208_cast_fu_320_p1;
reg  signed [31:0] conv_i_i208_cast_reg_1190;
wire   [4:0] zext_ln885_cast_fu_324_p1;
reg   [4:0] zext_ln885_cast_reg_1197;
wire   [10:0] zext_ln43_5_cast_fu_328_p1;
reg   [10:0] zext_ln43_5_cast_reg_1203;
wire  signed [5:0] sext_ln885_cast_fu_332_p1;
reg  signed [5:0] sext_ln885_cast_reg_1209;
wire  signed [6:0] sext_ln18_1_cast_fu_336_p1;
reg  signed [6:0] sext_ln18_1_cast_reg_1217;
wire  signed [6:0] sext_ln1558_1_cast_fu_340_p1;
reg  signed [6:0] sext_ln1558_1_cast_reg_1223;
wire  signed [6:0] rhs_cast_fu_344_p1;
reg  signed [6:0] rhs_cast_reg_1229;
wire   [25:0] zext_ln45_cast_fu_348_p1;
reg   [25:0] zext_ln45_cast_reg_1235;
reg  signed [5:0] addr_V_10_reg_1241;
wire   [0:0] icmp_ln45_fu_410_p2;
reg   [0:0] icmp_ln45_reg_1251;
wire   [0:0] icmp_ln1080_fu_430_p2;
reg   [0:0] icmp_ln1080_reg_1256;
wire  signed [5:0] addr_V_11_fu_448_p3;
reg  signed [5:0] addr_V_11_reg_1261;
reg  signed [5:0] addr_V_11_reg_1261_pp0_iter2_reg;
reg   [0:0] icmp_ln43_reg_1270;
reg   [0:0] icmp_ln43_reg_1270_pp0_iter2_reg;
reg   [0:0] icmp_ln43_reg_1270_pp0_iter3_reg;
reg   [0:0] icmp_ln43_reg_1270_pp0_iter4_reg;
reg   [31:0] rhs_1_load_reg_1274;
wire   [0:0] icmp_ln1072_fu_476_p2;
reg   [0:0] icmp_ln1072_reg_1279;
reg   [0:0] icmp_ln1072_reg_1279_pp0_iter2_reg;
reg   [0:0] icmp_ln1072_reg_1279_pp0_iter3_reg;
reg   [0:0] icmp_ln1072_reg_1279_pp0_iter4_reg;
wire   [0:0] icmp_ln45_1_fu_497_p2;
reg   [0:0] icmp_ln45_1_reg_1299;
reg   [0:0] icmp_ln45_1_reg_1299_pp0_iter2_reg;
wire   [0:0] select_ln43_8_fu_520_p3;
reg   [0:0] select_ln43_8_reg_1305;
reg   [0:0] select_ln43_8_reg_1305_pp0_iter2_reg;
reg   [0:0] select_ln43_8_reg_1305_pp0_iter3_reg;
reg   [0:0] select_ln43_8_reg_1305_pp0_iter4_reg;
wire   [0:0] or_ln1072_fu_535_p2;
reg   [0:0] or_ln1072_reg_1315;
wire   [0:0] select_ln1072_4_fu_547_p3;
reg   [0:0] select_ln1072_4_reg_1320;
reg   [0:0] select_ln1072_4_reg_1320_pp0_iter2_reg;
reg   [0:0] select_ln1072_4_reg_1320_pp0_iter3_reg;
reg   [0:0] select_ln1072_4_reg_1320_pp0_iter4_reg;
reg   [0:0] select_ln1072_4_reg_1320_pp0_iter5_reg;
wire   [0:0] first_itr_mid2_fu_554_p2;
reg   [0:0] first_itr_mid2_reg_1328_pp0_iter2_reg;
reg   [0:0] first_itr_mid2_reg_1328_pp0_iter3_reg;
reg   [0:0] first_itr_mid2_reg_1328_pp0_iter4_reg;
reg   [0:0] first_itr_mid2_reg_1328_pp0_iter5_reg;
reg   [1:0] j_3_reg_1332;
wire  signed [5:0] addr_V_12_fu_635_p3;
reg  signed [5:0] addr_V_12_reg_1337;
wire   [10:0] zext_ln55_fu_642_p1;
wire   [10:0] empty_fu_646_p2;
reg   [10:0] empty_reg_1351;
reg   [10:0] empty_reg_1351_pp0_iter3_reg;
reg   [10:0] empty_reg_1351_pp0_iter4_reg;
wire   [0:0] icmp_ln1080_1_fu_675_p2;
reg   [0:0] icmp_ln1080_1_reg_1362;
wire   [10:0] zext_ln55_1_fu_705_p1;
wire   [10:0] p_mid129_fu_709_p2;
reg   [10:0] p_mid129_reg_1373;
reg   [10:0] p_mid129_reg_1373_pp0_iter3_reg;
reg   [10:0] p_mid129_reg_1373_pp0_iter4_reg;
wire   [1:0] j_4_fu_721_p2;
reg   [1:0] j_4_reg_1379;
wire   [10:0] trunc_ln1540_fu_754_p1;
reg   [10:0] trunc_ln1540_reg_1389;
wire   [0:0] icmp_ln1072_3_fu_764_p2;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter3_reg;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter4_reg;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter5_reg;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter6_reg;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter7_reg;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter8_reg;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter9_reg;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter10_reg;
reg   [0:0] icmp_ln1072_3_reg_1394_pp0_iter11_reg;
wire   [6:0] mul_ln56_mid2_v_fu_886_p3;
reg  signed [6:0] mul_ln56_mid2_v_reg_1398;
wire   [10:0] ret_4_fu_893_p2;
reg   [10:0] ret_4_reg_1403;
reg   [10:0] ret_4_reg_1403_pp0_iter4_reg;
wire   [25:0] grp_fu_1043_p2;
wire  signed [25:0] grp_fu_1049_p2;
reg   [25:0] mul_ln45_1_reg_1413;
wire   [25:0] select_ln43_1_fu_898_p3;
reg   [25:0] select_ln43_1_reg_1418;
wire   [10:0] mul_ln56_mid2_fu_906_p2;
reg   [10:0] mul_ln56_mid2_reg_1424;
(* use_dsp48 = "no" *) wire   [25:0] p_mid111_fu_955_p2;
reg   [25:0] p_mid111_reg_1429;
wire   [25:0] select_ln1072_6_fu_966_p3;
reg   [25:0] select_ln1072_6_reg_1434;
wire   [10:0] add_ln587_1_fu_978_p2;
reg   [10:0] add_ln587_1_reg_1439;
reg   [61:0] sext_ln56_mid2_v_reg_1444;
reg   [7:0] mat_in_pad_V_load_reg_1454;
reg    ap_condition_exit_pp0_iter5_stage0;
reg   [0:0] ap_phi_mux_first_itr_phi_fu_308_p4;
wire    ap_loop_init;
wire   [63:0] zext_ln70_fu_1015_p1;
wire  signed [63:0] sext_ln56_mid2_fu_1019_p1;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] rhs_1_fu_140;
wire   [31:0] k_fu_758_p2;
reg   [31:0] ap_sig_allocacmp_rhs_1_load;
reg   [1:0] j_fu_144;
wire   [1:0] indvar3_mid2_fu_747_p3;
reg   [34:0] indvar_flatten_fu_148;
wire   [34:0] indvar_flatten_next_fu_572_p3;
reg   [4:0] i_fu_152;
wire   [4:0] select_ln1072_5_fu_714_p3;
reg   [40:0] indvar_flatten68_fu_156;
wire   [40:0] select_ln1072_7_fu_586_p3;
reg   [5:0] lhs_fu_160;
wire   [5:0] select_ln43_11_fu_687_p3;
reg   [5:0] ap_sig_allocacmp_addr_V_10;
reg   [5:0] addr_V_1_fu_164;
wire   [5:0] select_ln43_10_fu_680_p3;
reg   [14:0] m_fu_168;
wire   [14:0] select_ln43_9_fu_527_p3;
reg   [58:0] indvar_flatten141_fu_172;
wire   [58:0] add_ln43_fu_461_p2;
wire  signed [5:0] sext_ln232_fu_416_p0;
wire  signed [6:0] sext_ln232_fu_416_p1;
wire   [6:0] ret_5_fu_420_p2;
wire   [6:0] ret_fu_425_p2;
wire  signed [5:0] addr_V_4_fu_435_p0;
wire   [5:0] addr_V_4_fu_435_p2;
wire  signed [5:0] addr_V_11_fu_448_p1;
wire   [5:0] addr_V_6_fu_440_p3;
wire   [14:0] add_ln43_1_fu_487_p2;
wire   [0:0] icmp_ln1072_2_fu_503_p2;
wire   [0:0] exitcond_flatten165_fu_515_p2;
wire   [0:0] or_ln43_fu_481_p2;
wire   [0:0] select_ln43_7_fu_508_p3;
wire   [0:0] or_ln1072_1_fu_541_p2;
wire   [34:0] indvar_flatten_op_fu_566_p2;
wire   [40:0] add_ln1072_fu_580_p2;
wire   [5:0] addr_V_fu_623_p2;
wire   [5:0] addr_V_5_fu_628_p3;
wire   [4:0] empty_fu_646_p0;
wire   [5:0] empty_fu_646_p1;
wire  signed [6:0] sext_ln232_1_fu_662_p1;
wire   [6:0] add_ln1540_fu_665_p2;
wire   [6:0] add_ln1540_1_fu_670_p2;
wire   [4:0] select_ln43_fu_655_p3;
wire   [4:0] i_3_fu_692_p2;
wire   [4:0] p_mid129_fu_709_p0;
wire   [5:0] p_mid129_fu_709_p1;
wire   [1:0] select_ln1072_fu_698_p3;
wire   [0:0] empty_27_fu_727_p2;
wire   [0:0] empty_28_fu_731_p2;
wire   [31:0] k_mid2_fu_736_p3;
wire   [6:0] j_cast15_fu_797_p1;
wire  signed [6:0] addr_V_6_cast_fu_794_p1;
wire   [5:0] add_ln885_1_fu_810_p2;
wire   [5:0] add_ln885_fu_806_p2;
wire   [5:0] select_ln46_fu_814_p3;
wire   [5:0] select_ln46_2_fu_821_p3;
wire  signed [5:0] select_ln45_1_fu_833_p3;
wire   [5:0] select_ln43_2_fu_839_p3;
wire   [5:0] select_ln45_fu_827_p3;
wire   [5:0] select_ln43_3_fu_849_p3;
wire  signed [6:0] sext_ln43_2_fu_859_p1;
wire   [6:0] ret_1_fu_800_p2;
wire  signed [6:0] sext_ln43_1_fu_845_p1;
wire   [6:0] select_ln43_6_fu_863_p3;
wire   [6:0] j_cast15_mid1_fu_877_p1;
wire   [6:0] ret_1_mid1_fu_880_p2;
wire   [6:0] select_ln1072_3_fu_870_p3;
wire  signed [10:0] sext_ln43_fu_855_p1;
wire   [25:0] select_ln43_1_fu_898_p1;
wire   [25:0] select_ln43_1_fu_898_p2;
wire  signed [5:0] mul_ln56_mid2_fu_906_p1;
wire   [25:0] grp_fu_1061_p3;
wire   [25:0] p_cast13_fu_911_p1;
wire  signed [10:0] grp_fu_1055_p2;
wire   [10:0] select_ln43_4_fu_919_p3;
wire   [10:0] select_ln1072_1_fu_934_p3;
wire  signed [10:0] grp_fu_1069_p2;
wire   [10:0] select_ln43_5_fu_925_p3;
wire   [25:0] p_cast13_mid1_fu_931_p1;
wire   [25:0] grp_fu_1075_p3;
wire   [25:0] zext_ln55_2_fu_940_p1;
(* use_dsp48 = "no" *) wire   [25:0] empty_24_fu_914_p2;
wire   [25:0] p_mid141_fu_950_p2;
wire   [25:0] select_ln43_12_fu_960_p3;
wire   [10:0] select_ln1072_2_fu_944_p3;
wire   [10:0] add_ln587_fu_973_p2;
wire   [25:0] empty_29_fu_983_p3;
wire   [27:0] sext_ln56_mid2_v_v_v_v_v_fu_988_p3;
wire   [63:0] sext_ln56_mid2_v_v_v_v_fu_996_p1;
wire   [63:0] sext_ln56_mid2_v_v_v_fu_1000_p2;
wire  signed [17:0] sext_ln58_fu_1035_p1;
wire   [14:0] grp_fu_1043_p0;
wire   [11:0] grp_fu_1043_p1;
wire   [14:0] grp_fu_1049_p0;
wire   [11:0] grp_fu_1049_p1;
wire   [4:0] grp_fu_1055_p0;
wire   [1:0] grp_fu_1061_p0;
wire   [2:0] grp_fu_1061_p1;
wire   [4:0] grp_fu_1069_p0;
wire   [1:0] grp_fu_1075_p0;
wire   [2:0] grp_fu_1075_p1;
wire   [25:0] grp_fu_1075_p2;
reg    grp_fu_1043_ce;
reg    grp_fu_1049_ce;
reg    grp_fu_1055_ce;
reg    grp_fu_1061_ce;
reg    grp_fu_1069_ce;
reg    grp_fu_1075_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [25:0] grp_fu_1043_p00;
wire   [25:0] grp_fu_1049_p00;
wire   [4:0] grp_fu_1061_p00;
wire   [4:0] grp_fu_1075_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_done_reg = 1'b0;
end

im2col_mat_mul_5ns_6ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
mul_5ns_6ns_11_1_1_U1(
    .din0(empty_fu_646_p0),
    .din1(empty_fu_646_p1),
    .dout(empty_fu_646_p2)
);

im2col_mat_mul_5ns_6ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
mul_5ns_6ns_11_1_1_U2(
    .din0(p_mid129_fu_709_p0),
    .din1(p_mid129_fu_709_p1),
    .dout(p_mid129_fu_709_p2)
);

im2col_mat_mul_7s_6s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
mul_7s_6s_11_1_1_U3(
    .din0(mul_ln56_mid2_v_reg_1398),
    .din1(mul_ln56_mid2_fu_906_p1),
    .dout(mul_ln56_mid2_fu_906_p2)
);

im2col_mat_mul_mul_15ns_12ns_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_mul_15ns_12ns_26_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1043_p0),
    .din1(grp_fu_1043_p1),
    .ce(grp_fu_1043_ce),
    .dout(grp_fu_1043_p2)
);

im2col_mat_mul_mul_15ns_12ns_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_mul_15ns_12ns_26_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1049_p0),
    .din1(grp_fu_1049_p1),
    .ce(grp_fu_1049_ce),
    .dout(grp_fu_1049_p2)
);

im2col_mat_mul_mul_5ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_5ns_11s_11_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1055_p0),
    .din1(trunc_ln),
    .ce(grp_fu_1055_ce),
    .dout(grp_fu_1055_p2)
);

im2col_mat_mac_muladd_2ns_3ns_26ns_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_2ns_3ns_26ns_26_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1061_p0),
    .din1(grp_fu_1061_p1),
    .din2(grp_fu_1043_p2),
    .ce(grp_fu_1061_ce),
    .dout(grp_fu_1061_p3)
);

im2col_mat_mul_mul_5ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_mul_5ns_11s_11_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1069_p0),
    .din1(trunc_ln),
    .ce(grp_fu_1069_ce),
    .dout(grp_fu_1069_p2)
);

im2col_mat_mac_muladd_2ns_3ns_26ns_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_2ns_3ns_26ns_26_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1075_p0),
    .din1(grp_fu_1075_p1),
    .din2(grp_fu_1075_p2),
    .ce(grp_fu_1075_ce),
    .dout(grp_fu_1075_p3)
);

im2col_mat_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter5_stage0)) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            addr_V_1_fu_164 <= 6'd0;
        end else if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            addr_V_1_fu_164 <= select_ln43_10_fu_680_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        first_itr_reg_304 <= 1'd0;
    end else if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        first_itr_reg_304 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_fu_152 <= 5'd0;
        end else if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            i_fu_152 <= select_ln1072_5_fu_714_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten141_fu_172 <= 59'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_456_p2 == 1'd0))) begin
            indvar_flatten141_fu_172 <= add_ln43_fu_461_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten68_fu_156 <= 41'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_456_p2 == 1'd0))) begin
            indvar_flatten68_fu_156 <= select_ln1072_7_fu_586_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_148 <= 35'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_456_p2 == 1'd0))) begin
            indvar_flatten_fu_148 <= indvar_flatten_next_fu_572_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            j_fu_144 <= 2'd0;
        end else if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            j_fu_144 <= indvar3_mid2_fu_747_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_fu_160 <= 6'd0;
        end else if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            lhs_fu_160 <= select_ln43_11_fu_687_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            m_fu_168 <= 15'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_456_p2 == 1'd0))) begin
            m_fu_168 <= select_ln43_9_fu_527_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            rhs_1_fu_140 <= 32'd0;
        end else if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            rhs_1_fu_140 <= k_fu_758_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1270_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln587_1_reg_1439 <= add_ln587_1_fu_978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_V_10_reg_1241 <= ap_sig_allocacmp_addr_V_10;
        addr_V_11_reg_1261 <= addr_V_11_fu_448_p3;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        conv_i_i208_cast_reg_1190 <= conv_i_i208_cast_fu_320_p1;
        icmp_ln1080_reg_1256 <= icmp_ln1080_fu_430_p2;
        icmp_ln43_reg_1270 <= icmp_ln43_fu_456_p2;
        icmp_ln45_reg_1251 <= icmp_ln45_fu_410_p2;
        rhs_cast_reg_1229 <= rhs_cast_fu_344_p1;
        sext_ln1558_1_cast_reg_1223 <= sext_ln1558_1_cast_fu_340_p1;
        sext_ln18_1_cast_reg_1217 <= sext_ln18_1_cast_fu_336_p1;
        sext_ln56_cast_reg_1185 <= sext_ln56_cast_fu_316_p1;
        sext_ln885_cast_reg_1209 <= sext_ln885_cast_fu_332_p1;
        zext_ln43_5_cast_reg_1203[5 : 0] <= zext_ln43_5_cast_fu_328_p1[5 : 0];
        zext_ln45_cast_reg_1235[11 : 0] <= zext_ln45_cast_fu_348_p1[11 : 0];
        zext_ln885_cast_reg_1197[2 : 0] <= zext_ln885_cast_fu_324_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        addr_V_11_reg_1261_pp0_iter2_reg <= addr_V_11_reg_1261;
        addr_V_12_reg_1337 <= addr_V_12_fu_635_p3;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_reg_1351 <= empty_fu_646_p2;
        empty_reg_1351_pp0_iter3_reg <= empty_reg_1351;
        empty_reg_1351_pp0_iter4_reg <= empty_reg_1351_pp0_iter3_reg;
        first_itr_mid2_reg_1328_pp0_iter2_reg <= first_itr_mid2_reg_1328;
        first_itr_mid2_reg_1328_pp0_iter3_reg <= first_itr_mid2_reg_1328_pp0_iter2_reg;
        first_itr_mid2_reg_1328_pp0_iter4_reg <= first_itr_mid2_reg_1328_pp0_iter3_reg;
        first_itr_mid2_reg_1328_pp0_iter5_reg <= first_itr_mid2_reg_1328_pp0_iter4_reg;
        first_itr_mid2_reg_1328_pp0_iter6_reg <= first_itr_mid2_reg_1328_pp0_iter5_reg;
        icmp_ln1072_3_reg_1394_pp0_iter10_reg <= icmp_ln1072_3_reg_1394_pp0_iter9_reg;
        icmp_ln1072_3_reg_1394_pp0_iter11_reg <= icmp_ln1072_3_reg_1394_pp0_iter10_reg;
        icmp_ln1072_3_reg_1394_pp0_iter12_reg <= icmp_ln1072_3_reg_1394_pp0_iter11_reg;
        icmp_ln1072_3_reg_1394_pp0_iter3_reg <= icmp_ln1072_3_reg_1394;
        icmp_ln1072_3_reg_1394_pp0_iter4_reg <= icmp_ln1072_3_reg_1394_pp0_iter3_reg;
        icmp_ln1072_3_reg_1394_pp0_iter5_reg <= icmp_ln1072_3_reg_1394_pp0_iter4_reg;
        icmp_ln1072_3_reg_1394_pp0_iter6_reg <= icmp_ln1072_3_reg_1394_pp0_iter5_reg;
        icmp_ln1072_3_reg_1394_pp0_iter7_reg <= icmp_ln1072_3_reg_1394_pp0_iter6_reg;
        icmp_ln1072_3_reg_1394_pp0_iter8_reg <= icmp_ln1072_3_reg_1394_pp0_iter7_reg;
        icmp_ln1072_3_reg_1394_pp0_iter9_reg <= icmp_ln1072_3_reg_1394_pp0_iter8_reg;
        icmp_ln1072_reg_1279_pp0_iter2_reg <= icmp_ln1072_reg_1279;
        icmp_ln1072_reg_1279_pp0_iter3_reg <= icmp_ln1072_reg_1279_pp0_iter2_reg;
        icmp_ln1072_reg_1279_pp0_iter4_reg <= icmp_ln1072_reg_1279_pp0_iter3_reg;
        icmp_ln43_reg_1270_pp0_iter2_reg <= icmp_ln43_reg_1270;
        icmp_ln43_reg_1270_pp0_iter3_reg <= icmp_ln43_reg_1270_pp0_iter2_reg;
        icmp_ln43_reg_1270_pp0_iter4_reg <= icmp_ln43_reg_1270_pp0_iter3_reg;
        icmp_ln45_1_reg_1299_pp0_iter2_reg <= icmp_ln45_1_reg_1299;
        j_3_reg_1332 <= j_fu_144;
        mat_in_pad_V_load_reg_1454 <= mat_in_pad_V_q0;
        p_mid129_reg_1373_pp0_iter3_reg <= p_mid129_reg_1373;
        p_mid129_reg_1373_pp0_iter4_reg <= p_mid129_reg_1373_pp0_iter3_reg;
        ret_4_reg_1403_pp0_iter4_reg <= ret_4_reg_1403;
        select_ln1072_4_reg_1320_pp0_iter2_reg <= select_ln1072_4_reg_1320;
        select_ln1072_4_reg_1320_pp0_iter3_reg <= select_ln1072_4_reg_1320_pp0_iter2_reg;
        select_ln1072_4_reg_1320_pp0_iter4_reg <= select_ln1072_4_reg_1320_pp0_iter3_reg;
        select_ln1072_4_reg_1320_pp0_iter5_reg <= select_ln1072_4_reg_1320_pp0_iter4_reg;
        select_ln43_8_reg_1305_pp0_iter2_reg <= select_ln43_8_reg_1305;
        select_ln43_8_reg_1305_pp0_iter3_reg <= select_ln43_8_reg_1305_pp0_iter2_reg;
        select_ln43_8_reg_1305_pp0_iter4_reg <= select_ln43_8_reg_1305_pp0_iter3_reg;
        sext_ln56_mid2_v_reg_1444 <= {{sext_ln56_mid2_v_v_v_fu_1000_p2[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_fu_456_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        first_itr_mid2_reg_1328 <= first_itr_mid2_fu_554_p2;
        icmp_ln1072_reg_1279 <= icmp_ln1072_fu_476_p2;
        icmp_ln45_1_reg_1299 <= icmp_ln45_1_fu_497_p2;
        or_ln1072_reg_1315 <= or_ln1072_fu_535_p2;
        rhs_1_load_reg_1274 <= ap_sig_allocacmp_rhs_1_load;
        select_ln1072_4_reg_1320 <= select_ln1072_4_fu_547_p3;
        select_ln43_8_reg_1305 <= select_ln43_8_fu_520_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1270 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1072_3_reg_1394 <= icmp_ln1072_3_fu_764_p2;
        icmp_ln1080_1_reg_1362 <= icmp_ln1080_1_fu_675_p2;
        j_4_reg_1379 <= j_4_fu_721_p2;
        p_mid129_reg_1373 <= p_mid129_fu_709_p2;
        trunc_ln1540_reg_1389 <= trunc_ln1540_fu_754_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1270_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln45_1_reg_1413 <= grp_fu_1049_p2;
        mul_ln56_mid2_reg_1424 <= mul_ln56_mid2_fu_906_p2;
        select_ln43_1_reg_1418 <= select_ln43_1_fu_898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1270_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln56_mid2_v_reg_1398 <= mul_ln56_mid2_v_fu_886_p3;
        ret_4_reg_1403 <= ret_4_fu_893_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln1072_4_reg_1320_pp0_iter4_reg == 1'd1) & (icmp_ln43_reg_1270_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_mid111_reg_1429 <= p_mid111_fu_955_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln1072_4_reg_1320_pp0_iter4_reg == 1'd0) & (icmp_ln43_reg_1270_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1072_6_reg_1434 <= select_ln1072_6_fu_966_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_fu_456_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln43_reg_1270_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_first_itr_phi_fu_308_p4 = 1'd0;
    end else begin
        ap_phi_mux_first_itr_phi_fu_308_p4 = first_itr_reg_304;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_addr_V_10 = select_ln43_11_fu_687_p3;
    end else begin
        ap_sig_allocacmp_addr_V_10 = lhs_fu_160;
    end
end

always @ (*) begin
    if (((icmp_ln43_reg_1270 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_rhs_1_load = k_fu_758_p2;
    end else begin
        ap_sig_allocacmp_rhs_1_load = rhs_1_fu_140;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (first_itr_mid2_reg_1328_pp0_iter6_reg == 1'd1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1072_3_reg_1394_pp0_iter12_reg == 1'd1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1043_ce = 1'b1;
    end else begin
        grp_fu_1043_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1049_ce = 1'b1;
    end else begin
        grp_fu_1049_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1055_ce = 1'b1;
    end else begin
        grp_fu_1055_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1061_ce = 1'b1;
    end else begin
        grp_fu_1061_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1069_ce = 1'b1;
    end else begin
        grp_fu_1069_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1075_ce = 1'b1;
    end else begin
        grp_fu_1075_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (first_itr_mid2_reg_1328_pp0_iter6_reg == 1'd1))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1072_3_reg_1394_pp0_iter12_reg == 1'd1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mat_in_pad_V_ce0 = 1'b1;
    end else begin
        mat_in_pad_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1072_fu_580_p2 = (indvar_flatten68_fu_156 + 41'd1);

assign add_ln1540_1_fu_670_p2 = ($signed(add_ln1540_fu_665_p2) + $signed(sext_ln1558_1_cast_reg_1223));

assign add_ln1540_fu_665_p2 = ($signed(sext_ln232_1_fu_662_p1) + $signed(rhs_cast_reg_1229));

assign add_ln43_1_fu_487_p2 = (m_fu_168 + 15'd1);

assign add_ln43_fu_461_p2 = (indvar_flatten141_fu_172 + 59'd1);

assign add_ln587_1_fu_978_p2 = (add_ln587_fu_973_p2 + mul_ln56_mid2_reg_1424);

assign add_ln587_fu_973_p2 = (ret_4_reg_1403_pp0_iter4_reg + select_ln1072_2_fu_944_p3);

assign add_ln885_1_fu_810_p2 = ($signed(addr_V_11_reg_1261_pp0_iter2_reg) + $signed(sext_ln885_cast_reg_1209));

assign add_ln885_fu_806_p2 = ($signed(addr_V_12_reg_1337) + $signed(sext_ln885_cast_reg_1209));

assign addr_V_11_fu_448_p1 = ap_sig_allocacmp_addr_V_10;

assign addr_V_11_fu_448_p3 = ((icmp_ln45_fu_410_p2[0:0] == 1'b1) ? addr_V_11_fu_448_p1 : addr_V_6_fu_440_p3);

assign addr_V_12_fu_635_p3 = ((icmp_ln45_reg_1251[0:0] == 1'b1) ? addr_V_1_fu_164 : addr_V_5_fu_628_p3);

assign addr_V_4_fu_435_p0 = ap_sig_allocacmp_addr_V_10;

assign addr_V_4_fu_435_p2 = ($signed(addr_V_4_fu_435_p0) + $signed(sext_ln885_cast_reg_1209));

assign addr_V_5_fu_628_p3 = ((icmp_ln1080_reg_1256[0:0] == 1'b1) ? addr_V_fu_623_p2 : addr_V_1_fu_164);

assign addr_V_6_cast_fu_794_p1 = addr_V_12_reg_1337;

assign addr_V_6_fu_440_p3 = ((icmp_ln1080_fu_430_p2[0:0] == 1'b1) ? 6'd0 : addr_V_4_fu_435_p2);

assign addr_V_fu_623_p2 = ($signed(addr_V_1_fu_164) + $signed(sext_ln885_cast_reg_1209));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln1072_3_reg_1394_pp0_iter12_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln1072_3_reg_1394_pp0_iter12_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln1072_3_reg_1394_pp0_iter12_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) | ((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter13 = ((icmp_ln1072_3_reg_1394_pp0_iter12_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_AWREADY == 1'b0) & (first_itr_mid2_reg_1328_pp0_iter6_reg == 1'd1));
end

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign conv_i_i208_cast_fu_320_p1 = $signed(conv_i_i208);

assign empty_24_fu_914_p2 = (grp_fu_1061_p3 + p_cast13_fu_911_p1);

assign empty_27_fu_727_p2 = (select_ln43_8_reg_1305 | select_ln1072_4_reg_1320);

assign empty_28_fu_731_p2 = (icmp_ln1072_reg_1279 | empty_27_fu_727_p2);

assign empty_29_fu_983_p3 = ((select_ln1072_4_reg_1320_pp0_iter5_reg[0:0] == 1'b1) ? p_mid111_reg_1429 : select_ln1072_6_reg_1434);

assign empty_fu_646_p0 = zext_ln55_fu_642_p1;

assign empty_fu_646_p1 = zext_ln43_5_cast_reg_1203;

assign exitcond_flatten165_fu_515_p2 = ((indvar_flatten_fu_148 == mul_ln18) ? 1'b1 : 1'b0);

assign first_itr_mid2_fu_554_p2 = (select_ln1072_4_fu_547_p3 | or_ln1072_1_fu_541_p2);

assign grp_fu_1043_p0 = grp_fu_1043_p00;

assign grp_fu_1043_p00 = m_fu_168;

assign grp_fu_1043_p1 = zext_ln45_cast_reg_1235;

assign grp_fu_1049_p0 = grp_fu_1049_p00;

assign grp_fu_1049_p00 = add_ln43_1_fu_487_p2;

assign grp_fu_1049_p1 = zext_ln45_cast_reg_1235;

assign grp_fu_1055_p0 = zext_ln55_fu_642_p1;

assign grp_fu_1061_p0 = grp_fu_1061_p00;

assign grp_fu_1061_p00 = j_fu_144;

assign grp_fu_1061_p1 = zext_ln885_cast_reg_1197;

assign grp_fu_1069_p0 = zext_ln55_1_fu_705_p1;

assign grp_fu_1075_p0 = grp_fu_1075_p00;

assign grp_fu_1075_p00 = j_4_fu_721_p2;

assign grp_fu_1075_p1 = zext_ln885_cast_reg_1197;

assign grp_fu_1075_p2 = ((icmp_ln1072_reg_1279_pp0_iter3_reg[0:0] == 1'b1) ? select_ln43_1_fu_898_p1 : select_ln43_1_fu_898_p2);

assign i_3_fu_692_p2 = (select_ln43_fu_655_p3 + 5'd1);

assign icmp_ln1072_2_fu_503_p2 = ((ap_sig_allocacmp_rhs_1_load == conv_i_i208_cast_reg_1190) ? 1'b1 : 1'b0);

assign icmp_ln1072_3_fu_764_p2 = ((k_fu_758_p2 == conv_i_i208_cast_reg_1190) ? 1'b1 : 1'b0);

assign icmp_ln1072_fu_476_p2 = ((indvar_flatten68_fu_156 == mul_ln18_1) ? 1'b1 : 1'b0);

assign icmp_ln1080_1_fu_675_p2 = (($signed(add_ln1540_1_fu_670_p2) > $signed(sext_ln18_1_cast_reg_1217)) ? 1'b1 : 1'b0);

assign icmp_ln1080_fu_430_p2 = (($signed(ret_fu_425_p2) > $signed(sext_ln18_1_cast_reg_1217)) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_456_p2 = ((indvar_flatten141_fu_172 == mul_ln18_2) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_497_p2 = ((add_ln43_1_fu_487_p2 == 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_410_p2 = ((m_fu_168 == 15'd0) ? 1'b1 : 1'b0);

assign indvar3_mid2_fu_747_p3 = ((select_ln1072_4_reg_1320[0:0] == 1'b1) ? j_4_fu_721_p2 : select_ln1072_fu_698_p3);

assign indvar_flatten_next_fu_572_p3 = ((or_ln1072_fu_535_p2[0:0] == 1'b1) ? 35'd1 : indvar_flatten_op_fu_566_p2);

assign indvar_flatten_op_fu_566_p2 = (indvar_flatten_fu_148 + 35'd1);

assign j_4_fu_721_p2 = (select_ln1072_fu_698_p3 + 2'd1);

assign j_cast15_fu_797_p1 = j_3_reg_1332;

assign j_cast15_mid1_fu_877_p1 = j_4_reg_1379;

assign k_fu_758_p2 = (k_mid2_fu_736_p3 + 32'd1);

assign k_mid2_fu_736_p3 = ((empty_28_fu_731_p2[0:0] == 1'b1) ? 32'd0 : rhs_1_load_reg_1274);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = sext_ln56_mid2_fu_1019_p1;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = conv_i_i208_cast_reg_1190;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WDATA = $unsigned(sext_ln58_fu_1035_p1);

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign mat_in_pad_V_address0 = zext_ln70_fu_1015_p1;

assign mul_ln56_mid2_fu_906_p1 = sext_ln56_cast_reg_1185;

assign mul_ln56_mid2_v_fu_886_p3 = ((select_ln1072_4_reg_1320_pp0_iter2_reg[0:0] == 1'b1) ? ret_1_mid1_fu_880_p2 : select_ln1072_3_fu_870_p3);

assign or_ln1072_1_fu_541_p2 = (select_ln43_8_fu_520_p3 | or_ln43_fu_481_p2);

assign or_ln1072_fu_535_p2 = (select_ln43_8_fu_520_p3 | icmp_ln1072_fu_476_p2);

assign or_ln43_fu_481_p2 = (icmp_ln1072_fu_476_p2 | ap_phi_mux_first_itr_phi_fu_308_p4);

assign p_cast13_fu_911_p1 = empty_reg_1351_pp0_iter4_reg;

assign p_cast13_mid1_fu_931_p1 = p_mid129_reg_1373_pp0_iter4_reg;

assign p_mid111_fu_955_p2 = (grp_fu_1075_p3 + zext_ln55_2_fu_940_p1);

assign p_mid129_fu_709_p0 = zext_ln55_1_fu_705_p1;

assign p_mid129_fu_709_p1 = zext_ln43_5_cast_reg_1203;

assign p_mid141_fu_950_p2 = (select_ln43_1_reg_1418 + p_cast13_mid1_fu_931_p1);

assign ret_1_fu_800_p2 = ($signed(j_cast15_fu_797_p1) + $signed(addr_V_6_cast_fu_794_p1));

assign ret_1_mid1_fu_880_p2 = ($signed(j_cast15_mid1_fu_877_p1) + $signed(sext_ln43_1_fu_845_p1));

assign ret_4_fu_893_p2 = ($signed(trunc_ln1540_reg_1389) + $signed(sext_ln43_fu_855_p1));

assign ret_5_fu_420_p2 = ($signed(sext_ln232_fu_416_p1) + $signed(rhs_cast_reg_1229));

assign ret_fu_425_p2 = ($signed(ret_5_fu_420_p2) + $signed(sext_ln1558_1_cast_reg_1223));

assign rhs_cast_fu_344_p1 = $signed(rhs);

assign select_ln1072_1_fu_934_p3 = ((select_ln43_8_reg_1305_pp0_iter4_reg[0:0] == 1'b1) ? p_mid129_reg_1373_pp0_iter4_reg : select_ln43_4_fu_919_p3);

assign select_ln1072_2_fu_944_p3 = ((select_ln43_8_reg_1305_pp0_iter4_reg[0:0] == 1'b1) ? grp_fu_1069_p2 : select_ln43_5_fu_925_p3);

assign select_ln1072_3_fu_870_p3 = ((select_ln43_8_reg_1305_pp0_iter2_reg[0:0] == 1'b1) ? sext_ln43_1_fu_845_p1 : select_ln43_6_fu_863_p3);

assign select_ln1072_4_fu_547_p3 = ((select_ln43_8_fu_520_p3[0:0] == 1'b1) ? icmp_ln1072_1 : select_ln43_7_fu_508_p3);

assign select_ln1072_5_fu_714_p3 = ((select_ln43_8_reg_1305[0:0] == 1'b1) ? i_3_fu_692_p2 : select_ln43_fu_655_p3);

assign select_ln1072_6_fu_966_p3 = ((select_ln43_8_reg_1305_pp0_iter4_reg[0:0] == 1'b1) ? p_mid141_fu_950_p2 : select_ln43_12_fu_960_p3);

assign select_ln1072_7_fu_586_p3 = ((icmp_ln1072_fu_476_p2[0:0] == 1'b1) ? 41'd1 : add_ln1072_fu_580_p2);

assign select_ln1072_fu_698_p3 = ((or_ln1072_reg_1315[0:0] == 1'b1) ? 2'd0 : j_fu_144);

assign select_ln43_10_fu_680_p3 = ((icmp_ln1072_reg_1279[0:0] == 1'b1) ? addr_V_12_fu_635_p3 : addr_V_1_fu_164);

assign select_ln43_11_fu_687_p3 = ((icmp_ln1072_reg_1279[0:0] == 1'b1) ? addr_V_11_reg_1261 : addr_V_10_reg_1241);

assign select_ln43_12_fu_960_p3 = ((icmp_ln1072_reg_1279_pp0_iter4_reg[0:0] == 1'b1) ? mul_ln45_1_reg_1413 : empty_24_fu_914_p2);

assign select_ln43_1_fu_898_p1 = grp_fu_1049_p2;

assign select_ln43_1_fu_898_p2 = grp_fu_1043_p2;

assign select_ln43_1_fu_898_p3 = ((icmp_ln1072_reg_1279_pp0_iter3_reg[0:0] == 1'b1) ? select_ln43_1_fu_898_p1 : select_ln43_1_fu_898_p2);

assign select_ln43_2_fu_839_p3 = ((icmp_ln1072_reg_1279_pp0_iter2_reg[0:0] == 1'b1) ? select_ln45_1_fu_833_p3 : addr_V_12_reg_1337);

assign select_ln43_3_fu_849_p3 = ((icmp_ln1072_reg_1279_pp0_iter2_reg[0:0] == 1'b1) ? select_ln45_fu_827_p3 : addr_V_11_reg_1261_pp0_iter2_reg);

assign select_ln43_4_fu_919_p3 = ((icmp_ln1072_reg_1279_pp0_iter4_reg[0:0] == 1'b1) ? 11'd0 : empty_reg_1351_pp0_iter4_reg);

assign select_ln43_5_fu_925_p3 = ((icmp_ln1072_reg_1279_pp0_iter4_reg[0:0] == 1'b1) ? 11'd0 : grp_fu_1055_p2);

assign select_ln43_6_fu_863_p3 = ((icmp_ln1072_reg_1279_pp0_iter2_reg[0:0] == 1'b1) ? sext_ln43_2_fu_859_p1 : ret_1_fu_800_p2);

assign select_ln43_7_fu_508_p3 = ((icmp_ln1072_fu_476_p2[0:0] == 1'b1) ? icmp_ln1072_1 : icmp_ln1072_2_fu_503_p2);

assign select_ln43_8_fu_520_p3 = ((icmp_ln1072_fu_476_p2[0:0] == 1'b1) ? exitcond_flatten_mid1138 : exitcond_flatten165_fu_515_p2);

assign select_ln43_9_fu_527_p3 = ((icmp_ln1072_fu_476_p2[0:0] == 1'b1) ? add_ln43_1_fu_487_p2 : m_fu_168);

assign select_ln43_fu_655_p3 = ((icmp_ln1072_reg_1279[0:0] == 1'b1) ? 5'd0 : i_fu_152);

assign select_ln45_1_fu_833_p3 = ((icmp_ln45_1_reg_1299_pp0_iter2_reg[0:0] == 1'b1) ? addr_V_12_reg_1337 : select_ln46_2_fu_821_p3);

assign select_ln45_fu_827_p3 = ((icmp_ln45_1_reg_1299_pp0_iter2_reg[0:0] == 1'b1) ? addr_V_11_reg_1261_pp0_iter2_reg : select_ln46_fu_814_p3);

assign select_ln46_2_fu_821_p3 = ((icmp_ln1080_1_reg_1362[0:0] == 1'b1) ? add_ln885_fu_806_p2 : addr_V_12_reg_1337);

assign select_ln46_fu_814_p3 = ((icmp_ln1080_1_reg_1362[0:0] == 1'b1) ? 6'd0 : add_ln885_1_fu_810_p2);

assign sext_ln1558_1_cast_fu_340_p1 = $signed(sext_ln1558_1);

assign sext_ln18_1_cast_fu_336_p1 = $signed(sext_ln18_1);

assign sext_ln232_1_fu_662_p1 = addr_V_11_reg_1261;

assign sext_ln232_fu_416_p0 = ap_sig_allocacmp_addr_V_10;

assign sext_ln232_fu_416_p1 = sext_ln232_fu_416_p0;

assign sext_ln43_1_fu_845_p1 = $signed(select_ln43_2_fu_839_p3);

assign sext_ln43_2_fu_859_p1 = select_ln45_1_fu_833_p3;

assign sext_ln43_fu_855_p1 = $signed(select_ln43_3_fu_849_p3);

assign sext_ln56_cast_fu_316_p1 = $signed(sext_ln56);

assign sext_ln56_mid2_fu_1019_p1 = $signed(sext_ln56_mid2_v_reg_1444);

assign sext_ln56_mid2_v_v_v_fu_1000_p2 = (sext_ln56_mid2_v_v_v_v_fu_996_p1 + mat_out);

assign sext_ln56_mid2_v_v_v_v_fu_996_p1 = sext_ln56_mid2_v_v_v_v_v_fu_988_p3;

assign sext_ln56_mid2_v_v_v_v_v_fu_988_p3 = {{empty_29_fu_983_p3}, {2'd0}};

assign sext_ln58_fu_1035_p1 = $signed(mat_in_pad_V_load_reg_1454);

assign sext_ln885_cast_fu_332_p1 = $signed(sext_ln885);

assign trunc_ln1540_fu_754_p1 = k_mid2_fu_736_p3[10:0];

assign zext_ln43_5_cast_fu_328_p1 = zext_ln43_5;

assign zext_ln45_cast_fu_348_p1 = zext_ln45;

assign zext_ln55_1_fu_705_p1 = i_3_fu_692_p2;

assign zext_ln55_2_fu_940_p1 = select_ln1072_1_fu_934_p3;

assign zext_ln55_fu_642_p1 = i_fu_152;

assign zext_ln70_fu_1015_p1 = add_ln587_1_reg_1439;

assign zext_ln885_cast_fu_324_p1 = zext_ln885;

always @ (posedge ap_clk) begin
    zext_ln885_cast_reg_1197[4:3] <= 2'b00;
    zext_ln43_5_cast_reg_1203[10:6] <= 5'b00000;
    zext_ln45_cast_reg_1235[25:12] <= 14'b00000000000000;
end

endmodule //im2col_mat_im2col_mat_Pipeline_VITIS_LOOP_56_7
